{"version":3,"sources":["webpack:///src/modules/auth/components/index.ts","webpack:///src/modules/auth/containers/login/login.component.ts","webpack:///src/modules/auth/containers/login/login.component.scss","webpack:///src/modules/auth/auth-routing.module.ts","webpack:///src/modules/auth/auth.module.ts","webpack:///src/modules/auth/guards/auth.guard.ts","webpack:///src/modules/auth/containers/index.ts","webpack:///src/modules/auth/containers/login/login.component.html","webpack:///src/modules/auth/guards/index.ts"],"names":["components","LoginComponent","fb","authService","loginForm","group","password","required","minLength","status","login$","value","subscribe","key","controls","control","markAllAsTouched","get","passwordControl","touched","passwordControlInvalid","hasError","selector","changeDetection","OnPush","template","ROUTES","path","canActivate","component","data","title","AuthRoutingModule","imports","forChild","exports","AuthModule","providers","declarations","AuthGuard","containers","guards"],"mappings":"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","file":"modules-auth-auth-routing-module-es5.js","sourcesContent":["export const components = [];\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { AuthService } from '@modules/auth/services';\r\n\r\n@Component({\r\n    selector: 'sb-login',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    loginForm = this.fb.group({\r\n        password: ['', [Validators.required, Validators.minLength(8)]],\r\n    });\r\n\r\n    constructor(private fb: FormBuilder, private authService: AuthService) {}\r\n    ngOnInit() {}\r\n\r\n    onSubmit() {\r\n        if (this.loginForm.status === 'VALID') {\r\n            this.authService\r\n                .login$({\r\n                    password: this.loginForm.value.password,\r\n                })\r\n                .subscribe();\r\n        }\r\n\r\n        // tslint:disable-next-line: forin\r\n        for (const key in this.loginForm.controls) {\r\n            const control = this.loginForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    /* Accessor Methods */\r\n\r\n    get passwordControl() {\r\n        return this.loginForm.get('password') as FormControl;\r\n    }\r\n\r\n    get passwordControlValid() {\r\n        return this.passwordControl.touched && !this.passwordControlInvalid;\r\n    }\r\n\r\n    get passwordControlInvalid() {\r\n        return (\r\n            this.passwordControl.touched &&\r\n            (this.passwordControl.hasError('required') ||\r\n                this.passwordControl.hasError('minlength'))\r\n        );\r\n    }\r\n}\r\n","export default \"#inputPassword {\\n  flex: 0.9 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxnQkFBQTtBQURKIiwiZmlsZSI6ImxvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc3R5bGVzL3ZhcmlhYmxlcy5zY3NzJztcclxuXHJcbiNpbnB1dFBhc3N3b3JkIHtcclxuICAgIGZsZXg6IC45IDAgYXV0bztcclxufSJdfQ== */\";","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SBRouteData } from '@modules/navigation/models';\r\n\r\n/* Module */\r\nimport { AuthModule } from './auth.module';\r\n\r\n/* Containers */\r\nimport * as authContainers from './containers';\r\n\r\n/* Guards */\r\nimport * as authGuards from './guards';\r\n\r\n/* Routes */\r\nexport const ROUTES: Routes = [\r\n    {\r\n        path: 'login',\r\n        canActivate: [],\r\n        component: authContainers.LoginComponent,\r\n        data: {\r\n            title: 'Pages Login - Subhankar Sarkar',\r\n        } as SBRouteData,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [AuthModule, RouterModule.forChild(ROUTES)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n/* Modules */\r\nimport { AppCommonModule } from '@common/app-common.module';\r\nimport { NavigationModule } from '@modules/navigation/navigation.module';\r\n\r\n/* Components */\r\nimport * as authComponents from './components';\r\n\r\n/* Containers */\r\nimport * as authContainers from './containers';\r\n\r\n/* Guards */\r\nimport * as authGuards from './guards';\r\n\r\n/* Services */\r\nimport * as authServices from './services';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        AppCommonModule,\r\n        NavigationModule,\r\n    ],\r\n    providers: [...authServices.services, ...authGuards.guards],\r\n    declarations: [...authContainers.containers, ...authComponents.components],\r\n    exports: [...authContainers.containers, ...authComponents.components],\r\n})\r\nexport class AuthModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    canActivate(): Observable<boolean> {\r\n        return of(true);\r\n    }\r\n}\r\n","import { LoginComponent } from './login/login.component';\r\n\r\nexport const containers = [LoginComponent];\r\n\r\nexport * from './login/login.component';\r\n","export default \"<sb-layout-auth\\r\\n    ><div class=\\\"container\\\">\\r\\n        <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"col-lg-5\\\">\\r\\n                <h5 class=\\\"text-white text-center mt-5\\\">Enter admin password</h5>\\r\\n                <form class=\\\"form-inline justify-content-between\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                    <input class=\\\"form-control py-4 mr-2 my-2\\\" id=\\\"inputPassword\\\" data-cy=\\\"passwordInput\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [class.is-valid]=\\\"passwordControlValid\\\" [class.is-invalid]=\\\"passwordControlInvalid\\\" /><button class=\\\"btn btn-primary\\\" data-cy=\\\"loginButton\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"required\\\")'>Password required.</div>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"minlength\\\")'>Password must be at least 8 characters.</div>\\r\\n                </form>\\r\\n                <h6 class=\\\"text-white-50\\\">Default: 123123123</h6>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div></sb-layout-auth\\r\\n>\\r\\n\";","import { AuthGuard } from './auth.guard';\r\n\r\nexport const guards = [AuthGuard];\r\n\r\nexport * from './auth.guard';\r\n"]}