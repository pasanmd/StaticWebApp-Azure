{"version":3,"sources":["./src/modules/auth/components/index.ts","./src/modules/auth/containers/login/login.component.ts","./src/modules/auth/containers/login/login.component.scss","./src/modules/auth/auth-routing.module.ts","./src/modules/auth/auth.module.ts","./src/modules/auth/guards/auth.guard.ts","./src/modules/auth/containers/index.ts","./src/modules/auth/containers/login/login.component.html","./src/modules/auth/guards/index.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-routing-module-es2015.js","sourcesContent":["export const components = [];\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { AuthService } from '@modules/auth/services';\r\n\r\n@Component({\r\n    selector: 'sb-login',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    loginForm = this.fb.group({\r\n        password: ['', [Validators.required, Validators.minLength(8)]],\r\n    });\r\n\r\n    constructor(private fb: FormBuilder, private authService: AuthService) {}\r\n    ngOnInit() {}\r\n\r\n    onSubmit() {\r\n        if (this.loginForm.status === 'VALID') {\r\n            this.authService\r\n                .login$({\r\n                    password: this.loginForm.value.password,\r\n                })\r\n                .subscribe();\r\n        }\r\n\r\n        // tslint:disable-next-line: forin\r\n        for (const key in this.loginForm.controls) {\r\n            const control = this.loginForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    /* Accessor Methods */\r\n\r\n    get passwordControl() {\r\n        return this.loginForm.get('password') as FormControl;\r\n    }\r\n\r\n    get passwordControlValid() {\r\n        return this.passwordControl.touched && !this.passwordControlInvalid;\r\n    }\r\n\r\n    get passwordControlInvalid() {\r\n        return (\r\n            this.passwordControl.touched &&\r\n            (this.passwordControl.hasError('required') ||\r\n                this.passwordControl.hasError('minlength'))\r\n        );\r\n    }\r\n}\r\n","export default \"#inputPassword {\\n  flex: 0.9 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxnQkFBQTtBQURKIiwiZmlsZSI6ImxvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc3R5bGVzL3ZhcmlhYmxlcy5zY3NzJztcclxuXHJcbiNpbnB1dFBhc3N3b3JkIHtcclxuICAgIGZsZXg6IC45IDAgYXV0bztcclxufSJdfQ== */\";","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SBRouteData } from '@modules/navigation/models';\r\n\r\n/* Module */\r\nimport { AuthModule } from './auth.module';\r\n\r\n/* Containers */\r\nimport * as authContainers from './containers';\r\n\r\n/* Guards */\r\nimport * as authGuards from './guards';\r\n\r\n/* Routes */\r\nexport const ROUTES: Routes = [\r\n    {\r\n        path: 'login',\r\n        canActivate: [],\r\n        component: authContainers.LoginComponent,\r\n        data: {\r\n            title: 'Pages Login - Subhankar Sarkar',\r\n        } as SBRouteData,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [AuthModule, RouterModule.forChild(ROUTES)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n/* Modules */\r\nimport { AppCommonModule } from '@common/app-common.module';\r\nimport { NavigationModule } from '@modules/navigation/navigation.module';\r\n\r\n/* Components */\r\nimport * as authComponents from './components';\r\n\r\n/* Containers */\r\nimport * as authContainers from './containers';\r\n\r\n/* Guards */\r\nimport * as authGuards from './guards';\r\n\r\n/* Services */\r\nimport * as authServices from './services';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        AppCommonModule,\r\n        NavigationModule,\r\n    ],\r\n    providers: [...authServices.services, ...authGuards.guards],\r\n    declarations: [...authContainers.containers, ...authComponents.components],\r\n    exports: [...authContainers.containers, ...authComponents.components],\r\n})\r\nexport class AuthModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    canActivate(): Observable<boolean> {\r\n        return of(true);\r\n    }\r\n}\r\n","import { LoginComponent } from './login/login.component';\r\n\r\nexport const containers = [LoginComponent];\r\n\r\nexport * from './login/login.component';\r\n","export default \"<sb-layout-auth\\r\\n    ><div class=\\\"container\\\">\\r\\n        <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"col-lg-5\\\">\\r\\n                <h5 class=\\\"text-white text-center mt-5\\\">Enter admin password</h5>\\r\\n                <form class=\\\"form-inline justify-content-between\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                    <input class=\\\"form-control py-4 mr-2 my-2\\\" id=\\\"inputPassword\\\" data-cy=\\\"passwordInput\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [class.is-valid]=\\\"passwordControlValid\\\" [class.is-invalid]=\\\"passwordControlInvalid\\\" /><button class=\\\"btn btn-primary\\\" data-cy=\\\"loginButton\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"required\\\")'>Password required.</div>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"minlength\\\")'>Password must be at least 8 characters.</div>\\r\\n                </form>\\r\\n                <h6 class=\\\"text-white-50\\\">Default: 123123123</h6>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div></sb-layout-auth\\r\\n>\\r\\n\";","import { AuthGuard } from './auth.guard';\r\n\r\nexport const guards = [AuthGuard];\r\n\r\nexport * from './auth.guard';\r\n"],"sourceRoot":"webpack:///"}